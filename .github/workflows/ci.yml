name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['3.0', '3.1', '3.2', '3.3']
        rails-version: ['6.1', '7.0', '7.1']
        exclude:
          - ruby-version: '3.0'
            rails-version: '7.1'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    
    - name: Install Rails ${{ matrix.rails-version }}
      run: |
        gem install rails -v "~> ${{ matrix.rails-version }}.0"
        bundle update rails
    
    - name: Create coverage directory
      run: mkdir -p coverage
    
    - name: Run RSpec tests
      run: |
        bundle exec rspec --format documentation --format RspecJunitFormatter --out rspec.xml || bundle exec rspec --format documentation
      env:
        COVERAGE: true
        RAILS_ENV: test
    
    - name: Upload coverage to Codecov
      if: matrix.ruby-version == '3.2' && matrix.rails-version == '7.1'
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage/coverage.xml,./coverage/.resultset.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: rspec-results-${{ matrix.ruby-version }}-rails-${{ matrix.rails-version }}
        path: |
          rspec.xml
          coverage/

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Run RuboCop
      run: bundle exec rubocop --format github

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Run security audit
      run: |
        gem install bundler-audit
        bundle audit check --update